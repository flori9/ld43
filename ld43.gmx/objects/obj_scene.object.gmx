<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vars
drawAtY = 72;
groundY = 72 + tileHeight;
numberOfPositions = room_width / tileWidth;
positionList = ds_list_create();
deathList = ds_list_create();
healthAnimsOldHP = ds_list_create();
healthAnimsOldMaxHP = ds_list_create();
healthAnimsOldOutAnim = ds_list_create();
targetEradicated = false;
for (var i = 0; i &lt; numberOfPositions; i++) {
    ds_list_add_list(positionList, ds_list_create());
    ds_list_add(deathList, -1);
    
    ds_list_add(healthAnimsOldHP, -1);
    ds_list_add(healthAnimsOldMaxHP, -1);
    ds_list_add(healthAnimsOldOutAnim, 0);
}

scene_add_character_you(character_get("Pig"));
scene_add_character_you(character_get("Pig"));
scene_add_character_you(character_get("Pig"));
scene_add_character_you(character_get("Inugor"));
scene_add_character_you(character_get("Tom"));
scene_add_character_other(character_get("Pig"));
scene_add_character_other(character_get("Pig"));
scene_add_character_other(character_get("Pig"));
scene_add_character_other(character_get("Farmer"));
scene_add_character_other(character_get("Runar"));

miniSurf = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clean up
ds_list_destroy(positionList);
ds_list_destroy(healthAnimsOldHP);
ds_list_destroy(healthAnimsOldMaxHP);
ds_list_destroy(healthAnimsOldOutAnim);
ds_list_destroy(deathList);

if (surface_exists(miniSurf))
    surface_free(miniSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle step for everything
for (var i = 0; i &lt; obj_scene.numberOfPositions; i++) {
    var chars = obj_scene.positionList[| i];
    for (var j = 0; j &lt; ds_list_size(chars); j++) {
        var char = chars[| j];
        
        if (char[? "damageAnimStopping"] &amp;&amp; char[? "damageAnim"] &gt; 0)
            char[? "damageAnim"] = max(char[? "damageAnim"] - 0.05, 0);
        if (char[? "hpAnim"] &gt; 0)
            char[? "hpAnim"] = max(char[? "hpAnim"] - 0.05, 0);
    }
    
    if (deathList[| i] &gt;= 0) {
        var charToDie = deathList[| i];
        var deathAnim = charToDie[? "deathAnim"];
        charToDie[? "deathAnim"] += 0.1;
        if (charToDie[? "deathAnim"] &gt;= 1) {
            ds_map_destroy(deathList[| i]);
            deathList[| i] = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actually draw the scene
for (var i = 0; i &lt; numberOfPositions; i++) {
    var thisPosList = positionList[|i];
    var hpToDraw = -1, maxHPToDraw = -1;
    var hpAnimToDraw = 0;
    var prevHP = -1;
    
    for (var j = 0; j &lt; ds_list_size(thisPosList); j++) {
        var pos = thisPosList[| j];
        var isRotated = pos[? "alignment"] == alignment_other;
        
        script_execute(pos[? "drawer"], pos, i, isRotated, pos[? "drawerarg"]);
        
        hpToDraw = pos[? "hp"];
        maxHPToDraw = pos[? "maxHP"];
        hpAnimToDraw = pos[? "hpAnim"];
        prevHP = pos[? "prevHP"];
    }
    
    if (deathList[| i] &gt;= 0) {
        var charToDie = deathList[| i];
        var isRotated = charToDie[? "alignment"] == alignment_other;
        script_execute(charToDie[? "drawer"], charToDie, i, isRotated, charToDie[? "drawerarg"]);
    }
    
    if (hpToDraw &lt; 0 &amp;&amp; maxHPToDraw &lt; 0) {
        healthAnimsOldOutAnim[| i] = max(0, healthAnimsOldOutAnim[| i] - 0.1);
        hpToDraw = healthAnimsOldHP[| i];
        maxHPToDraw = healthAnimsOldMaxHP[| i];
        prevHP = hpToDraw;
    }
    else {
        healthAnimsOldOutAnim[| i] = min(1, healthAnimsOldOutAnim[| i] + 0.1);
        healthAnimsOldHP[| i] = hpToDraw;
        healthAnimsOldMaxHP[| i] = maxHPToDraw;
    }
    
    if (healthAnimsOldOutAnim[| i] &gt; 0)
        scene_draw_hp(hpToDraw, maxHPToDraw, i, healthAnimsOldOutAnim[| i], hpAnimToDraw, prevHP);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
