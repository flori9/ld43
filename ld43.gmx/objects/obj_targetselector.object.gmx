<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vars
chooseFromAlignment = -1;
thenContinueWithScript = -1;
thenContinueWithArg = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw target selector
for (var i = 0; i &lt; obj_scene.numberOfPositions; i++) {
    var scenePosList = obj_scene.positionList[| i];
    if (ds_list_size(scenePosList) &gt; 0) {
        var char = scenePosList[| 0];
        if (char[? "alignment"] != chooseFromAlignment &amp;&amp; chooseFromAlignment != alignment_any)
           continue;
 
        var mouseOver = false;
    
        if (mouse_x &gt;= tileWidth * i &amp;&amp; mouse_x &lt; tileWidth * (i + 1)) {
            if (mouse_y &gt;= obj_scene.drawAtY &amp;&amp; mouse_y &lt; obj_scene.drawAtY + tileWidth)
                mouseOver = true;
        }
    
        draw_sprite(spr_selectionbox, mouseOver, tileWidth * i, obj_scene.drawAtY);
        
        if (mouseOver &amp;&amp; mouse_check_button_pressed(mb_left)) {
            with (obj_message) instance_destroy();
            
            script_execute(thenContinueWithScript, thenContinueWithArg, obj_combat.combatCharacter, char);
            instance_destroy();
            exit;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
